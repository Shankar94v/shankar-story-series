# Definition for singly-linked list.
# class ListNode(object):
#     def __init__(self, val=0, next=None):
#         self.val = val
#         self.next = next
class Solution(object):
    
    def isPalindrome(self, head):
        # """
        # :type head: ListNode
        # :rtype: bool
        # """
        if head == None:
            return True
        slow=head
        fast=head
        while fast != None and fast.next != None:
            slow=slow.next
            fast=fast.next.next
        mid=slow
        last=reverse(mid.next)
        cur=head
        while last != None:
            if last.val != cur.val:
                return False
            last=last.next
            cur=cur.next
        return True
        